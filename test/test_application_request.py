# coding: utf-8

"""
    Qovery API

    - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 

    The version of the OpenAPI document: 1.0.3
    Contact: support+api+documentation@qovery.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from qovery.models.application_request import ApplicationRequest  # noqa: E501

class TestApplicationRequest(unittest.TestCase):
    """ApplicationRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApplicationRequest:
        """Test ApplicationRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApplicationRequest`
        """
        model = ApplicationRequest()  # noqa: E501
        if include_optional:
            return ApplicationRequest(
                storage = [
                    qovery.models.service_storage_request_storage_inner.ServiceStorageRequest_storage_inner(
                        id = '', 
                        type = 'FAST_SSD', 
                        size = 16, 
                        mount_point = '/mnt/images', )
                    ],
                ports = [
                    qovery.models.service_port_request_ports_inner.ServicePortRequest_ports_inner(
                        id = '', 
                        name = '', 
                        internal_port = 8080, 
                        external_port = 8080, 
                        publicly_accessible = True, 
                        is_default = True, 
                        protocol = 'HTTP', )
                    ],
                name = '',
                description = '',
                git_repository = qovery.models.application_git_repository_request.ApplicationGitRepositoryRequest(
                    url = 'https://github.com/Qovery/simple-node-app', 
                    branch = 'feat/text_xxx', 
                    root_path = '/', 
                    git_token_id = '', ),
                build_mode = 'BUILDPACKS',
                dockerfile_path = '',
                buildpack_language = 'CLOJURE',
                cpu = 1250,
                memory = 1024,
                min_running_instances = 0,
                max_running_instances = 56,
                healthchecks = qovery.models.healthcheck.Healthcheck(
                    readiness_probe = qovery.models.probe.Probe(
                        type = qovery.models.probe_type.Probe_type(
                            tcp = qovery.models.probe_type_tcp.Probe_type_tcp(
                                port = 56, 
                                host = '', ), 
                            http = qovery.models.probe_type_http.Probe_type_http(
                                path = '/', 
                                scheme = 'HTTP', 
                                port = 56, ), 
                            exec = qovery.models.probe_type_exec.Probe_type_exec(
                                command = [
                                    ''
                                    ], ), 
                            grpc = qovery.models.probe_type_grpc.Probe_type_grpc(
                                service = '', 
                                port = 56, ), ), 
                        initial_delay_seconds = 56, 
                        period_seconds = 56, 
                        timeout_seconds = 56, 
                        success_threshold = 56, 
                        failure_threshold = 56, ), 
                    liveness_probe = qovery.models.probe.Probe(
                        initial_delay_seconds = 56, 
                        period_seconds = 56, 
                        timeout_seconds = 56, 
                        success_threshold = 56, 
                        failure_threshold = 56, ), ),
                auto_preview = True,
                arguments = [
                    ''
                    ],
                entrypoint = '',
                auto_deploy = True
            )
        else:
            return ApplicationRequest(
                name = '',
                git_repository = qovery.models.application_git_repository_request.ApplicationGitRepositoryRequest(
                    url = 'https://github.com/Qovery/simple-node-app', 
                    branch = 'feat/text_xxx', 
                    root_path = '/', 
                    git_token_id = '', ),
                healthchecks = qovery.models.healthcheck.Healthcheck(
                    readiness_probe = qovery.models.probe.Probe(
                        type = qovery.models.probe_type.Probe_type(
                            tcp = qovery.models.probe_type_tcp.Probe_type_tcp(
                                port = 56, 
                                host = '', ), 
                            http = qovery.models.probe_type_http.Probe_type_http(
                                path = '/', 
                                scheme = 'HTTP', 
                                port = 56, ), 
                            exec = qovery.models.probe_type_exec.Probe_type_exec(
                                command = [
                                    ''
                                    ], ), 
                            grpc = qovery.models.probe_type_grpc.Probe_type_grpc(
                                service = '', 
                                port = 56, ), ), 
                        initial_delay_seconds = 56, 
                        period_seconds = 56, 
                        timeout_seconds = 56, 
                        success_threshold = 56, 
                        failure_threshold = 56, ), 
                    liveness_probe = qovery.models.probe.Probe(
                        initial_delay_seconds = 56, 
                        period_seconds = 56, 
                        timeout_seconds = 56, 
                        success_threshold = 56, 
                        failure_threshold = 56, ), ),
        )
        """

    def testApplicationRequest(self):
        """Test ApplicationRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
