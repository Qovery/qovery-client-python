# coding: utf-8

"""
    Qovery API

    - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 

    The version of the OpenAPI document: 1.0.3
    Contact: support+api+documentation@qovery.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from qovery.models.environment_logs import EnvironmentLogs  # noqa: E501

class TestEnvironmentLogs(unittest.TestCase):
    """EnvironmentLogs unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EnvironmentLogs:
        """Test EnvironmentLogs
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EnvironmentLogs`
        """
        model = EnvironmentLogs()  # noqa: E501
        if include_optional:
            return EnvironmentLogs(
                type = '',
                timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                details = qovery.models.environment_logs_details.EnvironmentLogs_details(
                    organization_id = '', 
                    cluster_id = '', 
                    execution_id = '', 
                    transmitter = qovery.models.environment_logs_details_transmitter.EnvironmentLogs_details_transmitter(
                        id = '', 
                        name = '', 
                        type = '', ), 
                    stage = qovery.models.environment_logs_details_stage.EnvironmentLogs_details_stage(
                        step = '', 
                        id = '', 
                        name = '', ), ),
                error = qovery.models.environment_logs_error.EnvironmentLogs_error(
                    tag = '', 
                    user_log_message = '', 
                    link = '', 
                    hint_message = '', 
                    underlying_error = qovery.models.environment_logs_error_underlying_error.EnvironmentLogs_error_underlying_error(
                        message = '', 
                        full_details = '', ), ),
                message = qovery.models.environment_logs_message.EnvironmentLogs_message(
                    safe_message = '', 
                    full_details = '', )
            )
        else:
            return EnvironmentLogs(
                type = '',
                timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                details = qovery.models.environment_logs_details.EnvironmentLogs_details(
                    organization_id = '', 
                    cluster_id = '', 
                    execution_id = '', 
                    transmitter = qovery.models.environment_logs_details_transmitter.EnvironmentLogs_details_transmitter(
                        id = '', 
                        name = '', 
                        type = '', ), 
                    stage = qovery.models.environment_logs_details_stage.EnvironmentLogs_details_stage(
                        step = '', 
                        id = '', 
                        name = '', ), ),
        )
        """

    def testEnvironmentLogs(self):
        """Test EnvironmentLogs"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
