# coding: utf-8

"""
    Qovery API

    - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 

    The version of the OpenAPI document: 1.0.3
    Contact: support+api+documentation@qovery.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Any, ClassVar, Dict, List, Optional
from pydantic import BaseModel, StrictBool, StrictInt, StrictStr, field_validator
from pydantic import Field
try:
    from typing import Self
except ImportError:
    from typing_extensions import Self

class ApplicationAdvancedSettings(BaseModel):
    """
    ApplicationAdvancedSettings
    """ # noqa: E501
    deployment_custom_domain_check_enabled: Optional[StrictBool] = Field(default=None, description="disable custom domain check when deploying an application", alias="deployment.custom_domain_check_enabled")
    deployment_termination_grace_period_seconds: Optional[StrictInt] = Field(default=None, description="define how long in seconds an application is supposed to be stopped gracefully", alias="deployment.termination_grace_period_seconds")
    deployment_affinity_node_required: Optional[Dict[str, StrictStr]] = Field(default=None, description="Set pod placement on specific Kubernetes nodes labels", alias="deployment.affinity.node.required")
    deployment_antiaffinity_pod: Optional[StrictStr] = Field(default=None, description="Define how you want pods affinity to behave: * `Preferred` allows, but does not require, pods of a given service are not co-located (or co-hosted) on a single node * `Requirred` ensures that the pods of a given service are not co-located (or co-hosted) on a single node (safer in term of availability but can be expensive depending on the number of replicas) ", alias="deployment.antiaffinity.pod")
    deployment_update_strategy_type: Optional[StrictStr] = Field(default=None, description="* `RollingUpdate` gracefully rollout new versions, and automatically rollback if the new version fails to start * `Recreate` stop all current versions and create new ones once all old ones have been shutdown ", alias="deployment.update_strategy.type")
    deployment_update_strategy_rolling_update_max_unavailable_percent: Optional[StrictInt] = Field(default=None, description="Define the percentage of a maximum number of pods that can be unavailable during the update process", alias="deployment.update_strategy.rolling_update.max_unavailable_percent")
    deployment_update_strategy_rolling_update_max_surge_percent: Optional[StrictInt] = Field(default=None, description="Define the percentage of the maximum number of pods that can be created over the desired number of pods", alias="deployment.update_strategy.rolling_update.max_surge_percent")
    build_timeout_max_sec: Optional[StrictInt] = Field(default=None, alias="build.timeout_max_sec")
    build_cpu_max_in_milli: Optional[StrictInt] = Field(default=None, description="define the max cpu resources (in milli)", alias="build.cpu_max_in_milli")
    build_ram_max_in_gib: Optional[StrictInt] = Field(default=None, description="define the max ram resources (in gib)", alias="build.ram_max_in_gib")
    network_ingress_proxy_body_size_mb: Optional[StrictInt] = Field(default=None, alias="network.ingress.proxy_body_size_mb")
    network_ingress_enable_cors: Optional[StrictBool] = Field(default=None, alias="network.ingress.enable_cors")
    network_ingress_cors_allow_origin: Optional[StrictStr] = Field(default=None, alias="network.ingress.cors_allow_origin")
    network_ingress_cors_allow_methods: Optional[StrictStr] = Field(default=None, alias="network.ingress.cors_allow_methods")
    network_ingress_cors_allow_headers: Optional[StrictStr] = Field(default=None, alias="network.ingress.cors_allow_headers")
    network_ingress_proxy_buffer_size_kb: Optional[StrictInt] = Field(default=None, description="header buffer size used while reading response header from upstream", alias="network.ingress.proxy_buffer_size_kb")
    network_ingress_keepalive_time_seconds: Optional[StrictInt] = Field(default=None, description="Limits the maximum time (in seconds) during which requests can be processed through one keepalive connection", alias="network.ingress.keepalive_time_seconds")
    network_ingress_keepalive_timeout_seconds: Optional[StrictInt] = Field(default=None, description="Sets a timeout (in seconds) during which an idle keepalive connection to an upstream server will stay open.", alias="network.ingress.keepalive_timeout_seconds")
    network_ingress_send_timeout_seconds: Optional[StrictInt] = Field(default=None, description="Sets a timeout (in seconds) for transmitting a response to the client", alias="network.ingress.send_timeout_seconds")
    network_ingress_proxy_connect_timeout_seconds: Optional[StrictInt] = Field(default=None, description="Sets a timeout (in seconds) for establishing a connection to a proxied server", alias="network.ingress.proxy_connect_timeout_seconds")
    network_ingress_proxy_send_timeout_seconds: Optional[StrictInt] = Field(default=None, description="Sets a timeout (in seconds) for transmitting a request to the proxied server", alias="network.ingress.proxy_send_timeout_seconds")
    network_ingress_proxy_read_timeout_seconds: Optional[StrictInt] = Field(default=None, description="Sets a timeout (in seconds) for reading a response from the proxied server", alias="network.ingress.proxy_read_timeout_seconds")
    network_ingress_proxy_buffering: Optional[StrictStr] = Field(default=None, description="Allows to enable or disable nginx `proxy-request-buffering`", alias="network.ingress.proxy_buffering")
    network_ingress_whitelist_source_range: Optional[StrictStr] = Field(default=None, description="list of source ranges to allow access to ingress proxy.  This property can be used to whitelist source IP ranges for ingress proxy. The value is a comma separated list of CIDRs, e.g. 10.0.0.0/24,172.10.0.1 To allow all source ranges, set 0.0.0.0/0. ", alias="network.ingress.whitelist_source_range")
    network_ingress_denylist_source_range: Optional[StrictStr] = Field(default=None, description="list of source ranges to deny access to ingress proxy.  This property can be used to blacklist source IP ranges for ingress proxy. The value is a comma separated list of CIDRs, e.g. 10.0.0.0/24,172.10.0.1 ", alias="network.ingress.denylist_source_range")
    network_ingress_basic_auth_env_var: Optional[StrictStr] = Field(default=None, description="Set the name of an environment variable to use as a basic authentication (`login:crypted_password`) from `htpasswd` command. ", alias="network.ingress.basic_auth_env_var")
    network_ingress_enable_sticky_session: Optional[StrictBool] = Field(default=None, description="Enable the load balancer to bind a user's session to a specific target. This ensures that all requests from the user during the session are sent to the same target ", alias="network.ingress.enable_sticky_session")
    network_ingress_grpc_send_timeout_seconds: Optional[StrictInt] = Field(default=None, description="Sets a timeout (in seconds) for transmitting a request to the grpc server", alias="network.ingress.grpc_send_timeout_seconds")
    network_ingress_grpc_read_timeout_seconds: Optional[StrictInt] = Field(default=None, description="Sets a timeout (in seconds) for transmitting a request to the grpc server", alias="network.ingress.grpc_read_timeout_seconds")
    network_ingress_extra_headers: Optional[StrictStr] = Field(default=None, description="Allows to define response headers", alias="network.ingress.extra_headers")
    hpa_cpu_average_utilization_percent: Optional[StrictInt] = Field(default=None, description="Percentage value of cpu usage at which point pods should scale up.", alias="hpa.cpu.average_utilization_percent")
    security_service_account_name: Optional[StrictStr] = Field(default=None, description="Allows you to set an existing Kubernetes service account name ", alias="security.service_account_name")
    security_read_only_root_filesystem: Optional[StrictBool] = Field(default=None, description="Mounts the container's root filesystem as read-only ", alias="security.read_only_root_filesystem")
    __properties: ClassVar[List[str]] = ["deployment.custom_domain_check_enabled", "deployment.termination_grace_period_seconds", "deployment.affinity.node.required", "deployment.antiaffinity.pod", "deployment.update_strategy.type", "deployment.update_strategy.rolling_update.max_unavailable_percent", "deployment.update_strategy.rolling_update.max_surge_percent", "build.timeout_max_sec", "build.cpu_max_in_milli", "build.ram_max_in_gib", "network.ingress.proxy_body_size_mb", "network.ingress.enable_cors", "network.ingress.cors_allow_origin", "network.ingress.cors_allow_methods", "network.ingress.cors_allow_headers", "network.ingress.proxy_buffer_size_kb", "network.ingress.keepalive_time_seconds", "network.ingress.keepalive_timeout_seconds", "network.ingress.send_timeout_seconds", "network.ingress.proxy_connect_timeout_seconds", "network.ingress.proxy_send_timeout_seconds", "network.ingress.proxy_read_timeout_seconds", "network.ingress.proxy_buffering", "network.ingress.whitelist_source_range", "network.ingress.denylist_source_range", "network.ingress.basic_auth_env_var", "network.ingress.enable_sticky_session", "network.ingress.grpc_send_timeout_seconds", "network.ingress.grpc_read_timeout_seconds", "network.ingress.extra_headers", "hpa.cpu.average_utilization_percent", "security.service_account_name", "security.read_only_root_filesystem"]

    @field_validator('deployment_antiaffinity_pod')
    def deployment_antiaffinity_pod_validate_enum(cls, value):
        """Validates the enum"""
        if value is None:
            return value

        if value not in ('Preferred', 'Requirred'):
            raise ValueError("must be one of enum values ('Preferred', 'Requirred')")
        return value

    @field_validator('deployment_update_strategy_type')
    def deployment_update_strategy_type_validate_enum(cls, value):
        """Validates the enum"""
        if value is None:
            return value

        if value not in ('RollingUpdate', 'Recreate'):
            raise ValueError("must be one of enum values ('RollingUpdate', 'Recreate')")
        return value

    model_config = {
        "populate_by_name": True,
        "validate_assignment": True,
        "protected_namespaces": (),
    }


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of ApplicationAdvancedSettings from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        _dict = self.model_dump(
            by_alias=True,
            exclude={
            },
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Dict) -> Self:
        """Create an instance of ApplicationAdvancedSettings from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "deployment.custom_domain_check_enabled": obj.get("deployment.custom_domain_check_enabled"),
            "deployment.termination_grace_period_seconds": obj.get("deployment.termination_grace_period_seconds"),
            "deployment.affinity.node.required": obj.get("deployment.affinity.node.required"),
            "deployment.antiaffinity.pod": obj.get("deployment.antiaffinity.pod"),
            "deployment.update_strategy.type": obj.get("deployment.update_strategy.type"),
            "deployment.update_strategy.rolling_update.max_unavailable_percent": obj.get("deployment.update_strategy.rolling_update.max_unavailable_percent"),
            "deployment.update_strategy.rolling_update.max_surge_percent": obj.get("deployment.update_strategy.rolling_update.max_surge_percent"),
            "build.timeout_max_sec": obj.get("build.timeout_max_sec"),
            "build.cpu_max_in_milli": obj.get("build.cpu_max_in_milli"),
            "build.ram_max_in_gib": obj.get("build.ram_max_in_gib"),
            "network.ingress.proxy_body_size_mb": obj.get("network.ingress.proxy_body_size_mb"),
            "network.ingress.enable_cors": obj.get("network.ingress.enable_cors"),
            "network.ingress.cors_allow_origin": obj.get("network.ingress.cors_allow_origin"),
            "network.ingress.cors_allow_methods": obj.get("network.ingress.cors_allow_methods"),
            "network.ingress.cors_allow_headers": obj.get("network.ingress.cors_allow_headers"),
            "network.ingress.proxy_buffer_size_kb": obj.get("network.ingress.proxy_buffer_size_kb"),
            "network.ingress.keepalive_time_seconds": obj.get("network.ingress.keepalive_time_seconds"),
            "network.ingress.keepalive_timeout_seconds": obj.get("network.ingress.keepalive_timeout_seconds"),
            "network.ingress.send_timeout_seconds": obj.get("network.ingress.send_timeout_seconds"),
            "network.ingress.proxy_connect_timeout_seconds": obj.get("network.ingress.proxy_connect_timeout_seconds"),
            "network.ingress.proxy_send_timeout_seconds": obj.get("network.ingress.proxy_send_timeout_seconds"),
            "network.ingress.proxy_read_timeout_seconds": obj.get("network.ingress.proxy_read_timeout_seconds"),
            "network.ingress.proxy_buffering": obj.get("network.ingress.proxy_buffering"),
            "network.ingress.whitelist_source_range": obj.get("network.ingress.whitelist_source_range"),
            "network.ingress.denylist_source_range": obj.get("network.ingress.denylist_source_range"),
            "network.ingress.basic_auth_env_var": obj.get("network.ingress.basic_auth_env_var"),
            "network.ingress.enable_sticky_session": obj.get("network.ingress.enable_sticky_session"),
            "network.ingress.grpc_send_timeout_seconds": obj.get("network.ingress.grpc_send_timeout_seconds"),
            "network.ingress.grpc_read_timeout_seconds": obj.get("network.ingress.grpc_read_timeout_seconds"),
            "network.ingress.extra_headers": obj.get("network.ingress.extra_headers"),
            "hpa.cpu.average_utilization_percent": obj.get("hpa.cpu.average_utilization_percent"),
            "security.service_account_name": obj.get("security.service_account_name"),
            "security.read_only_root_filesystem": obj.get("security.read_only_root_filesystem")
        })
        return _obj


